PROJECT(main)
MESSAGE(STATUS "project_name: " ${PROJECT_NAME})
MESSAGE(STATUS "demo project_source_name: " ${PROJECT_SOURCE_DIR})

#SET(src_list add1.cpp)
FILE(GLOB_RECURSE src_list ${PROJECT_SOURCE_DIR} *.cpp)
MESSAGE(STATUS "global collect files: " ${PROJECT_SOURCE_DIR})
ADD_EXECUTABLE(${PROJECT_NAME} ${src_list})

#INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/../add2 ${PROJECT_SOURCE_DIR}/../add1 ${PROJECT_SOURCE_DIR}/../add)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/../add)
MESSAGE(STATUS "add path: " ${PROJECT_SOURCE_DIR}/../build/add)
FIND_LIBRARY(dependent_libs NAMES add add1 add2 PATHS ${PROJECT_SOURCE_DIR}/../build/add ${PROJECT_SOURCE_DIR}/../build/add1 ${PROJECT_SOURCE_DIR}/../build/add2)
#FIND_LIBRARY(dependent_libs NAMES add PATHS ${PROJECT_SOURCE_DIR}/../build/add)
#FIND_LIBRARY(dependent_libs NAMES add2 PATHS ${PROJECT_SOURCE_DIR}/../build/add2)
#TARGET_INCLUDE_DIRECTORIES(${PROJECT_NAME} PUBLIC add1)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} add add1 add2)
MESSAGE(STATUS "dependent_libs: " ${dependent_libs})
IF(dependent_libs)
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${dependent_libs})
ENDIF(dependent_libs)
#LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/build/add ${PROJECT_SOURCE_DIR}/build/add1 ${PROJECT_SOURCE_DIR}/build/add2 )

INSTALL(TARGETS ${PROJECT_NAME} DESTINATION bin)
